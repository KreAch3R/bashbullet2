#!/bin/bash

# wait for internet connection to avoid freeze on https://github.com/Boteium/bashbullet2/blob/master/src/libbashbullet.cpp#L193
while :
do
    pingtime=$(ping -w 1 8.8.8.8 2>/dev/null | grep "ttl")
    if [ "$pingtime" = "" ]; then
        pingtimetwo=$(ping -w 1 www.google.com 2>/dev/null | grep "ttl")
        if [ "$pingtimetwo" != "" ]; then
            break;
        fi
    else
        break;
    fi
    sleep 1
done

# initialize yad systray icon
PIPE="$HOME/.bashbullet2/.systray_pipe"
if [ -e "$PIPE" ];then
	echo "$PIPE" exist.
	echo Is another bashbullet instance running already ?
	echo Remove this file if there isn\'t any other running instance.
	exit 0
fi

# make and attach a file descriptor to the file
mkfifo $PIPE
exec 3<> $PIPE

# remove on exit
on_exit() {
	# killall remaing yad process
	JobList="$(jobs -p)"
	if [ ! -z "$JobList" ];then
		kill $JobList
	fi
	rm -f $PIPE
}
trap on_exit EXIT

# create yad notification icon
yad --notification --title bashbullet --listen \
    --image="$HOME/.bashbullet2/lib/pushbullet.svg" \
    --text="Click to display new message. Right click to exit program" \
    --command="$HOME/.bashbullet2/lib/inbox.sh" <&3 &
yadPID=$!

$HOME/.bashbullet2/libbashbullet &
libPID=$!

myPID=$$

echo "menu:Exit bashbullet2! kill ${yadPID} ${libPID} ${myPID}" >&3

# guard daemon, check every 5 minutes
while true;do
	sleep 300;
	if [ ! -x /proc/$yadPID ];then
		# exit program
		break
	fi
	if [ -x /proc/$libPID ];then
		if ! find ~/.bashbullet2/.TIMESTAMP -amin -5 |grep TIMESTAMP ;then
			# force restart libbashbullet
			kill $libPID
			$HOME/.bashbullet2/libbashbullet &
			libPID=$!
			echo "menu:Exit bashbullet2! kill ${yadPID} ${libPID} ${myPID}" >&3
		fi
	else
		# restart libbashbullet on crash
		$HOME/.bashbullet2/libbashbullet &
		libPID=$!
		echo "menu:Exit bashbullet2! kill ${yadPID} ${libPID} ${myPID}" >&3
	fi
done
